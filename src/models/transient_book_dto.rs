/*
 * Komga API
 *
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransientBookDto {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "fileLastModified")]
    pub file_last_modified: String,
    #[serde(rename = "sizeBytes")]
    pub size_bytes: i64,
    #[serde(rename = "size")]
    pub size: String,
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "mediaType")]
    pub media_type: String,
    #[serde(rename = "pages")]
    pub pages: Vec<crate::models::PageDto>,
    #[serde(rename = "files")]
    pub files: Vec<String>,
    #[serde(rename = "comment")]
    pub comment: String,
    #[serde(rename = "number", skip_serializing_if = "Option::is_none")]
    pub number: Option<f32>,
    #[serde(rename = "seriesId", skip_serializing_if = "Option::is_none")]
    pub series_id: Option<String>,
}

impl TransientBookDto {
    pub fn new(id: String, name: String, url: String, file_last_modified: String, size_bytes: i64, size: String, status: String, media_type: String, pages: Vec<crate::models::PageDto>, files: Vec<String>, comment: String) -> TransientBookDto {
        TransientBookDto {
            id,
            name,
            url,
            file_last_modified,
            size_bytes,
            size,
            status,
            media_type,
            pages,
            files,
            comment,
            number: None,
            series_id: None,
        }
    }
}


