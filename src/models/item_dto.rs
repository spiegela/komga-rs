/*
 * Komga API
 *
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ItemDto {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "summary", skip_serializing_if = "Option::is_none")]
    pub summary: Option<String>,
    #[serde(rename = "content_html", skip_serializing_if = "Option::is_none")]
    pub content_html: Option<String>,
    #[serde(rename = "date_modified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
    #[serde(rename = "author", skip_serializing_if = "Option::is_none")]
    pub author: Option<Box<crate::models::AuthorDto>>,
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
    #[serde(rename = "_komga", skip_serializing_if = "Option::is_none")]
    pub _komga: Option<Box<crate::models::KomgaExtensionDto>>,
}

impl ItemDto {
    pub fn new(id: String, tags: Vec<String>) -> ItemDto {
        ItemDto {
            id,
            url: None,
            title: None,
            summary: None,
            content_html: None,
            date_modified: None,
            author: None,
            tags,
            _komga: None,
        }
    }
}


