/*
 * Komga API
 *
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserUpdateDto {
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<String>>,
    #[serde(rename = "ageRestriction", skip_serializing_if = "Option::is_none")]
    pub age_restriction: Option<Box<crate::models::AgeRestrictionUpdateDto>>,
    #[serde(rename = "labelsAllow", skip_serializing_if = "Option::is_none")]
    pub labels_allow: Option<Vec<String>>,
    #[serde(rename = "labelsExclude", skip_serializing_if = "Option::is_none")]
    pub labels_exclude: Option<Vec<String>>,
    #[serde(rename = "sharedLibraries", skip_serializing_if = "Option::is_none")]
    pub shared_libraries: Option<Box<crate::models::SharedLibrariesUpdateDto>>,
}

impl UserUpdateDto {
    pub fn new() -> UserUpdateDto {
        UserUpdateDto {
            roles: None,
            age_restriction: None,
            labels_allow: None,
            labels_exclude: None,
            shared_libraries: None,
        }
    }
}


