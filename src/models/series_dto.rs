/*
 * Komga API
 *
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SeriesDto {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "libraryId")]
    pub library_id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "created")]
    pub created: String,
    #[serde(rename = "lastModified")]
    pub last_modified: String,
    #[serde(rename = "fileLastModified")]
    pub file_last_modified: String,
    #[serde(rename = "booksCount")]
    pub books_count: i32,
    #[serde(rename = "booksReadCount")]
    pub books_read_count: i32,
    #[serde(rename = "booksUnreadCount")]
    pub books_unread_count: i32,
    #[serde(rename = "booksInProgressCount")]
    pub books_in_progress_count: i32,
    #[serde(rename = "metadata")]
    pub metadata: Box<crate::models::SeriesMetadataDto>,
    #[serde(rename = "booksMetadata")]
    pub books_metadata: Box<crate::models::BookMetadataAggregationDto>,
    #[serde(rename = "deleted")]
    pub deleted: bool,
    #[serde(rename = "oneshot")]
    pub oneshot: bool,
}

impl SeriesDto {
    pub fn new(id: String, library_id: String, name: String, url: String, created: String, last_modified: String, file_last_modified: String, books_count: i32, books_read_count: i32, books_unread_count: i32, books_in_progress_count: i32, metadata: crate::models::SeriesMetadataDto, books_metadata: crate::models::BookMetadataAggregationDto, deleted: bool, oneshot: bool) -> SeriesDto {
        SeriesDto {
            id,
            library_id,
            name,
            url,
            created,
            last_modified,
            file_last_modified,
            books_count,
            books_read_count,
            books_unread_count,
            books_in_progress_count,
            metadata: Box::new(metadata),
            books_metadata: Box::new(books_metadata),
            deleted,
            oneshot,
        }
    }
}


