/*
 * Komga API
 *
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SettingsDto {
    #[serde(rename = "deleteEmptyCollections")]
    pub delete_empty_collections: bool,
    #[serde(rename = "deleteEmptyReadLists")]
    pub delete_empty_read_lists: bool,
    #[serde(rename = "rememberMeDurationDays")]
    pub remember_me_duration_days: i64,
    #[serde(rename = "thumbnailSize")]
    pub thumbnail_size: ThumbnailSize,
    #[serde(rename = "taskPoolSize")]
    pub task_pool_size: i32,
    #[serde(rename = "serverPort")]
    pub server_port: Box<crate::models::SettingMultiSourceInteger>,
    #[serde(rename = "serverContextPath")]
    pub server_context_path: Box<crate::models::SettingMultiSourceString>,
}

impl SettingsDto {
    pub fn new(delete_empty_collections: bool, delete_empty_read_lists: bool, remember_me_duration_days: i64, thumbnail_size: ThumbnailSize, task_pool_size: i32, server_port: crate::models::SettingMultiSourceInteger, server_context_path: crate::models::SettingMultiSourceString) -> SettingsDto {
        SettingsDto {
            delete_empty_collections,
            delete_empty_read_lists,
            remember_me_duration_days,
            thumbnail_size,
            task_pool_size,
            server_port: Box::new(server_port),
            server_context_path: Box::new(server_context_path),
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ThumbnailSize {
    #[serde(rename = "DEFAULT")]
    Default,
    #[serde(rename = "MEDIUM")]
    Medium,
    #[serde(rename = "LARGE")]
    Large,
    #[serde(rename = "XLARGE")]
    Xlarge,
}

impl Default for ThumbnailSize {
    fn default() -> ThumbnailSize {
        Self::Default
    }
}

