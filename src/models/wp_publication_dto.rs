/*
 * Komga API
 *
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WpPublicationDto {
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<String>,
    #[serde(rename = "metadata")]
    pub metadata: Box<crate::models::WpMetadataDto>,
    #[serde(rename = "links")]
    pub links: Vec<crate::models::WpLinkDto>,
    #[serde(rename = "images")]
    pub images: Vec<crate::models::WpLinkDto>,
    #[serde(rename = "readingOrder")]
    pub reading_order: Vec<crate::models::WpLinkDto>,
    #[serde(rename = "resources")]
    pub resources: Vec<crate::models::WpLinkDto>,
    #[serde(rename = "toc")]
    pub toc: Vec<crate::models::WpLinkDto>,
    #[serde(rename = "landmarks")]
    pub landmarks: Vec<crate::models::WpLinkDto>,
    #[serde(rename = "pageList")]
    pub page_list: Vec<crate::models::WpLinkDto>,
}

impl WpPublicationDto {
    pub fn new(metadata: crate::models::WpMetadataDto, links: Vec<crate::models::WpLinkDto>, images: Vec<crate::models::WpLinkDto>, reading_order: Vec<crate::models::WpLinkDto>, resources: Vec<crate::models::WpLinkDto>, toc: Vec<crate::models::WpLinkDto>, landmarks: Vec<crate::models::WpLinkDto>, page_list: Vec<crate::models::WpLinkDto>) -> WpPublicationDto {
        WpPublicationDto {
            context: None,
            metadata: Box::new(metadata),
            links,
            images,
            reading_order,
            resources,
            toc,
            landmarks,
            page_list,
        }
    }
}


